{
    "swagger": "2.0",
    "info": {
        "description": "API for banking accounts.",
        "title": "e-corp API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/accounts": {
            "get": {
                "description": "Lists accounts by filtering the IDs provided in the input.\nIt returns bad request error if the provided list of ids is invalid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page Token",
                        "name": "page_token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Balance",
                        "schema": {
                            "$ref": "#/definitions/controller.GetBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "invalid parameter",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a banking account.\nReturns bad request error if:\n- the account name is not filled;\n- the number of characters of the document is not valid;\n- the format of the document is not valid;\n- the number of the characters of the secret is less than the minimum;\n- the account already exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created",
                        "schema": {
                            "$ref": "#/definitions/controller.CreateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameter",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/accounts/{account_id}/balance": {
            "get": {
                "description": "Returns the current balance of the account.\nIt returns NotFound error if the account not exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get Balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Balance",
                        "schema": {
                            "$ref": "#/definitions/controller.GetBalanceResponse"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Validates the credentials of an account and return a login token session.\nIt returns bad request error if the provided password doesn't match for the account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "$ref": "#/definitions/controller.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "invalid parameter",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/transfers": {
            "get": {
                "description": "Lists all the transfers sent or received by the account in desc order.\nIt returns not found error if the account not exists.\nThe account id is obtained from the subject.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "List Transfers",
                "responses": {
                    "200": {
                        "description": "Transfers list",
                        "schema": {
                            "$ref": "#/definitions/controller.ListTransfersResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a transfer and updates the balance of the destination and origin accounts.\nThe origin account id is obtained from the subject.\nIt returns not found error if the destination account not exists.\nIt returns bad request error if:\n- The AccountOriginID is equal to AccountDestinationID.\n- The amount is less than or equal to zero.\n- The origin accounts doesn't have enough funds to complete the transfer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Send Transfer",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer Created",
                        "schema": {
                            "$ref": "#/definitions/controller.TransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "Document is the document number of the customer.",
                    "type": "string"
                },
                "name": {
                    "description": "Name represents the name of the customer.",
                    "type": "string"
                },
                "secret": {
                    "description": "Secret is the password. Must have at least 8 digits.",
                    "type": "string"
                }
            }
        },
        "controller.CreateAccountResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Balance represents the balance of the account.",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.GetBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Balance represents the balance of the account.",
                    "type": "integer"
                }
            }
        },
        "controller.ListTransfersResponse": {
            "type": "object",
            "properties": {
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.ListTransfersResponseItem"
                    }
                }
            }
        },
        "controller.ListTransfersResponseItem": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "type": "string"
                },
                "account_origin_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.LoginRequest": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "controller.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Token is the session token used to authenticate the account.",
                    "type": "string"
                }
            }
        },
        "controller.TransferRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount is the amount of the transfer. It must be positive.",
                    "type": "integer"
                },
                "destination_id": {
                    "type": "string"
                }
            }
        },
        "controller.TransferResponse": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "type": "string"
                },
                "account_origin_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}